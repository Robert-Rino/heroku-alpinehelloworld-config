name: deploy-app
on:
  push:

env:
  GKE_CLUSTER: nino-playground
  GKE_ZONE: asia-east1-a	   

jobs:
  deploy-push:
    name: deploy
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: ./kustomization

    steps:
    - name: Config
      uses: actions/github-script@v5
      with:
        script: |
          let owner = context.repo['owner']
          let repo = context.repo['repo']
          
          let parts = repo.split('-')
          const target_repo = parts.slice(0, -1).join('-')
          
          process.env['TARGET_REPO'] = target_repo
          process.env['OWNER'] = owner


    - name: Create deployment
      id: create_deployment
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.GH_PERSONAL_TOKEN }}
        script: |
          const deployment = await github.rest.repos.createDeployment({
              owner: $OWNER,
              repo: $TARGET_REPO,
              ref: ${{context.sha}}
            })

          console.log(`${deployment}`)
          process.enc['DEPLOYMENT_ID'] = deployment['id']


    - name: Mark deployment in_progress
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.GH_PERSONAL_TOKEN }}
        script: |
          github.rest.repos.createDeploymentStatus({
              owner: $OWNER,
              repo: $TARGET_REPO,
              deployment_id: $DEPLOYMENT_ID,
              state: 'in_progress',
            })

    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: swag-nino-chang

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    - name: Deploy to k8s
      run: |-
        kubectl apply -f ../k8s-template/001_deployment.yaml
        kubectl get services -o wide

    - name: Mark deployment success
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.GH_PERSONAL_TOKEN }}
        script: |
          github.rest.repos.createDeploymentStatus({
              owner: $OWNER,
              repo: $TARGET_REPO,
              deployment_id: $DEPLOYMENT_ID,
              state: 'success',
            })
